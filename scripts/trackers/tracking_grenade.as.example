#include "tracker.as"
#include "helpers.as"
#include "admin_manager.as"
#include "log.as"
#include "query_helpers.as"
#include "query_helpers2.as"


class TrackingGrenade : Tracker {
	protected Metagame@ m_metagame;
	// protected array<empdVehicle@> empList;

	TrackingGrenade(Metagame@ metagame) {
		@m_metagame = @metagame;
	}
    
	bool hasEnded() const {
		// always on
		return false;
	}
    
	bool hasStarted() const {
		return true;
	}

	protected void handleResultEvent(const XmlElement@ event) {
		//emp notify_script key
		string notify_script_key = "tracking_grenade";
		
		//checking if the event was triggered by an emp grenade
		string key = event.getStringAttribute("key");
		if (key == notify_script_key) {

		}
    }

	void update(float time) {
		//updating the timer on all tracked vehicles
		// for (uint i = 0; i < empList.length() ; ++i) {		
		// 	empList[i].m_timer -= time;
			
		// 	if (empList[i].m_timer < 0){
		// 		unlockVehicle(m_metagame, empList[i].m_id);
				
		// 		empList.removeAt(i);
		// 		--i;
		// 	}
		// }
	}
}